apiVersion: v1
data:
  gateway.conf: |-
    server {
      error_log  /var/log/nginx/error.log debug;
      listen       8443 ssl;
      server_name ota.ce;
      ssl_certificate     /etc/ssl/gateway/server.chain.pem;
      ssl_certificate_key /etc/ssl/gateway/server.key;
      ssl_verify_client on;
      ssl_verify_depth 10;
      ssl_client_certificate /etc/ssl/gateway/ca.crt;

      if ($ssl_client_s_dn ~ "CN=(.*)$") {
        set $deviceUuid $1;
      }
      if ($ssl_client_s_dn !~ "CN=(.*)$") {
        set $deviceUuid $ssl_client_s_dn;
      }
      set $deviceNamespace "default";

      location /core/ {
        rewrite ^/core/(.*)$ /api/v1/mydevice/${deviceUuid}/$1 break;
        proxy_set_header x-ats-namespace $deviceNamespace;
        proxy_pass http://core;
      }

      location /treehub/ {
        rewrite ^/treehub/(.*)$ /api/v2/$1 break;
        proxy_set_header x-ats-device-uuid $deviceUuid;
        proxy_set_header x-ats-namespace $deviceNamespace;
        proxy_pass http://treehub;
      }

      location /director/ {
        rewrite ^/director/(.*)$ /api/v1/device/${deviceUuid}/$1 break;
        proxy_set_header x-ats-namespace $deviceNamespace;
        proxy_pass http://director;
      }

      location /repo/ {
        rewrite ^/repo/(.*)$ /api/v1/user_repo/${deviceUuid}/$1 break;
        proxy_set_header x-ats-namespace $deviceNamespace;
        proxy_pass http://repo;
      }

    }
  upstreams.conf: |-
    upstream core {
      server sota-core:80;
    }

    upstream treehub {
      server treehub:80;
    }

    upstream director {
      server director:80;
    }

    upstream repo {
      server tuf-reposerver:80;
    }
kind: ConfigMap
metadata:
  creationTimestamp: 2017-12-20T15:46:34Z
  name: gateway-config
  namespace: default
  selfLink: /api/v1/namespaces/default/configmaps/gateway-config
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJWVENCL0tBREFnRUNBZ2tBa3pJUThXTi9FYkV3Q2dZSUtvWkl6ajBFQXdJd0VERU9NQXdHQTFVRUF3d0YKYjNSaFEwRXdIaGNOTVRjeE1qSXhNRGcxTnpNM1doY05NVGd4TWpJeE1EZzFOek0zV2pBUU1RNHdEQVlEVlFRRApEQVZ2ZEdGRFFUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJMZWFTMEhkbTQ3VFFCVS9kTm1nCkdwUXVLdFFTbFBudStBNVZSYk02TzFMeUo4bnZhcTE0L1BOYWYzelNMcHBEa3gweHhrbUhFSWFRZENHV0JzblcKM1kyalB6QTlNQXdHQTFVZEV3UUZNQU1CQWY4d0N3WURWUjBQQkFRREFnSUVNQ0FHQTFVZEpRRUIvd1FXTUJRRwpDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUE0NkU3aGlHbDJXTVNLCmtKekhBdlVYNjJ3b2o4aUpMTk9wR2MxNFlxQk03Z0loQUxUQ0dnRHFva1g4QjNzdEZ3d0JKdmtVeHZRVm5KdFIKNGh3Tml4QS9sR3VOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  server.chain.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJXakNDQVFDZ0F3SUJBZ0lKQUkzKzR1OVQ1Ly9WTUFvR0NDcUdTTTQ5QkFNQ01CQXhEakFNQmdOVkJBTU0KQlc5MFlVTkJNQjRYRFRFM01USXlNVEE0TlRjek4xb1hEVEU0TVRJeU1UQTROVGN6TjFvd0ZqRVVNQklHQTFVRQpBd3dMYjNSaExXZGhkR1YzWVhrd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTN3NFV052ZThLCk10WTdYRy9GcHIxMENVbXMyOXhORnNLOHl0ZFAycjZTT3o3UFVYQ21zN2x6U04zNUZBQ2gxR3crVi9JWERudW8KL2FNN09lR2VnVElpb3owd096QU9CZ05WSFE4QkFmOEVCQU1DQTZnd0ZnWURWUjBsQVFIL0JBd3dDZ1lJS3dZQgpCUVVIQXdFd0VRWURWUjBSQkFvd0NJSUdiM1JoTG1ObE1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRFkyWFQ0CkhQSkVteEZKd1RzWmtKd0pSMGozUFhrZUlCWithcDZCNS8raEVnSWdmbCtZOHJkcE1TQS9DL1NEZDBuYjdWMXMKS0xmamhCem91bURORTNHallOST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQlZUQ0IvS0FEQWdFQ0Fna0FreklROFdOL0ViRXdDZ1lJS29aSXpqMEVBd0l3RURFT01Bd0dBMVVFQXd3RgpiM1JoUTBFd0hoY05NVGN4TWpJeE1EZzFOek0zV2hjTk1UZ3hNakl4TURnMU56TTNXakFRTVE0d0RBWURWUVFECkRBVnZkR0ZEUVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxlYVMwSGRtNDdUUUJVL2RObWcKR3BRdUt0UVNsUG51K0E1VlJiTTZPMUx5SjhudmFxMTQvUE5hZjN6U0xwcERreDB4eGttSEVJYVFkQ0dXQnNuVwozWTJqUHpBOU1Bd0dBMVVkRXdRRk1BTUJBZjh3Q3dZRFZSMFBCQVFEQWdJRU1DQUdBMVVkSlFFQi93UVdNQlFHCkNDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQTQ2RTdoaUdsMldNU0sKa0p6SEF2VVg2MndvajhpSkxOT3BHYzE0WXFCTTdnSWhBTFRDR2dEcW9rWDhCM3N0Rnd3Qkp2a1V4dlFWbkp0Ugo0aHdOaXhBL2xHdU4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  server.key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBVa2w0NW0xeWxCT0xMazBITW85WVFwZ3cyRGQxYTFUWFJYYnI3cWRuOXlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdTdCRmpiM3ZDakxXTzF4dnhhYTlkQWxKck52Y1RSYkN2TXJYVDlxK2tqcyt6MUZ3cHJPNQpjMGpkK1JRQW9kUnNQbGZ5Rnc1N3FQMmpPem5obm9FeUlnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: 2017-12-21T07:39:01Z
  name: gateway-tls
  namespace: default
  selfLink: /api/v1/namespaces/default/secrets/gateway-tls
type: Opaque
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: gateway-deployment
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 1
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: nginx
        image: nginx:1.13.7
        command:
        - nginx-debug
        - -g
        - 'daemon off;'
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/
        - name: gateway-tls
          mountPath: /etc/ssl/gateway/
          readOnly: true
        ports:
        - containerPort: 80
        - containerPort: 8443
      volumes:
      - name: nginx-config
        configMap:
          name: gateway-config
      - name: gateway-tls
        secret:
          secretName: gateway-tls
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
spec:
  ports:
     - name: http
       port: 80
       protocol: TCP
       targetPort: 80
     - name: https
       port: 8443
       protocol: TCP
       targetPort: 8443
       nodePort: 30443
  selector:
    app: gateway
  type: NodePort
