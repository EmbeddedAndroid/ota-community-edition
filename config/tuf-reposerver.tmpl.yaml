---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tuf-reposerver-config
data:
  AUTH_PROTOCOL: none
  AUTH_VERIFICATION: none
  BIND_PORT: '9001'
  DB_MIGRATE: 'true'
  DB_URL: jdbc:mariadb://mysql:3306/tuf_reposerver
  DB_USER: tuf_reposerver
  JAVA_OPTS: "-Xmx900m"
  KAFKA_BOOTSTRAP_SERVERS: kafka-0:9092
  KAFKA_HOST: kafka-0:9092
  KAFKA_TOPIC_SUFFIX: ce
  REPORT_METRICS: "false"
  TUF_KEYSERVER_HOST: tuf-keyserver
  TUF_KEYSERVER_PORT: '80'
  TUF_REPOSERVER_AWS_BUCKET_ID: ats-k8s-tuf-reposerver
  TUF_REPOSERVER_AWS_REGION: eu-central-1
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tuf-reposerver
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tuf-reposerver
    spec:
      containers:
      - image: {{ .tufReposerverImage }}
        name: tuf-reposerver
        envFrom:
        - configMapRef:
            name: tuf-reposerver-config
        - secretRef:
            name: tuf-reposerver-secret
        imagePullPolicy: Always
        ports:
        - containerPort: 9001
          name: tuf-repo0
        args:
        resources:
          requests:
            cpu: '0.1'
            memory: 512Mi
        livenessProbe:
          initialDelaySeconds: 300
          periodSeconds: 30
          httpGet:
            port: 9001
            path: "/health"
      imagePullSecrets:
      - name: atsk8sregistrykey
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tuf-reposerver
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: tuf-reposerver.{{ .externalDomain }}
    http:
      paths:
      - backend:
          serviceName: tuf-reposerver
          servicePort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: tuf-reposerver-secret
type: Opaque
data:
  DB_PASSWORD: {{ .tufReposerverDbPassword | b64enc }}
---
apiVersion: v1
kind: Service
metadata:
  name: tuf-reposerver
spec:
  ports:
  - port: 80
    targetPort: 9001
    protocol: TCP
    name: tuf-repo0
  selector:
    app: tuf-reposerver
